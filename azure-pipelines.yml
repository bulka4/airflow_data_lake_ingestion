# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- main

resources:
- repo: self

variables:
  # Container registry service connection
  - name: dockerRegistryServiceConnection
    value: '0a4c32b5-342b-480e-92af-a9464125eaf0'
  - name: imageRepository
    value: 'airflow'
  - name: containerRegistry
    value: 'dataEngineeringApps.azurecr.io'
  - name: dockerfilePath
    value: '$(Build.SourcesDirectory)/airflow_app/Dockerfile'
  - name: tag
    value: '$(Build.BuildId)'
  - group: ACR-SP-credentials

# Agent Pool
pool:
  name: data_engineering_apps

stages:
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build and push an image to container registry
    steps:
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)

- stage: Deploy
  jobs:
  - job: PullImage
    steps:
      # arguments SP_ID and SP_PASSWORD for the inline script will be taken from the Azure Pipelines Library.
      # Here we need to provide the acr_name (container registry name).
      - script: |
            acr_name="dataEngineeringApps"
            image_name="$(containerRegistry)/$(imageRepository):$(tag)"

            # Set the Azure Pipeline variables as environment variables. They will be used in the docker-compose.yaml file.
            export CONTAINER_REGISTRY=$(containerRegistry)
            export IMAGE_REPOSITORY=$(imageRepository)
            export IMAGE_TAG=$(tag)

            echo "Login to Docker using service principal credentials"
            docker login $acr_name.azurecr.io -u $(SP_ID) -p $(SP_PASSWORD)

            echo "Pulling the Docker image"
            docker pull $image_name

            echo "Running the Docker container"
            docker compose -f airflow_app/docker-compose.yaml up -d